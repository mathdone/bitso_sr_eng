"""initial migration

Revision ID: 2a1e6537c5f9
Revises: 
Create Date: 2024-11-27 01:44:18.889919

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2a1e6537c5f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deposit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('tx_status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deposit_currency'), 'deposit', ['currency'], unique=False)
    op.create_index(op.f('ix_deposit_tx_status'), 'deposit', ['tx_status'], unique=False)
    op.create_index(op.f('ix_deposit_user_id'), 'deposit', ['user_id'], unique=False)
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('event_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_event_name'), 'event', ['event_name'], unique=False)
    op.create_index(op.f('ix_event_user_id'), 'event', ['user_id'], unique=False)
    op.create_table('exchange_volume',
    sa.Column('exchange_id', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('volume_btc', sa.Float(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('exchange_id', 'date')
    )
    op.create_table('exchanges',
    sa.Column('exchange_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('year_established', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('trust_score', sa.Integer(), nullable=True),
    sa.Column('trust_score_rank', sa.Integer(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('exchange_id')
    )
    op.create_table('exchanges_with_shared_markets',
    sa.Column('exchange_id', sa.String(), nullable=False),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('exchange_id')
    )
    op.create_table('market_volume',
    sa.Column('market_id', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('volume_usd', sa.Float(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('market_id', 'date')
    )
    op.create_table('tickers',
    sa.Column('exchange_id', sa.String(), nullable=False),
    sa.Column('base', sa.String(), nullable=True),
    sa.Column('target', sa.String(), nullable=True),
    sa.Column('market_id', sa.String(), nullable=True),
    sa.Column('volume_usd', sa.Float(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('exchange_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_level',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('event_timestamp', sa.DateTime(), nullable=False),
    sa.Column('jurisdiction', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'event_timestamp')
    )
    op.create_table('withdrawals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('interface', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('tx_status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_withdrawals_tx_status'), 'withdrawals', ['tx_status'], unique=False)
    op.create_index(op.f('ix_withdrawals_user_id'), 'withdrawals', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_withdrawals_user_id'), table_name='withdrawals')
    op.drop_index(op.f('ix_withdrawals_tx_status'), table_name='withdrawals')
    op.drop_table('withdrawals')
    op.drop_table('user_level')
    op.drop_table('user')
    op.drop_table('tickers')
    op.drop_table('market_volume')
    op.drop_table('exchanges_with_shared_markets')
    op.drop_table('exchanges')
    op.drop_table('exchange_volume')
    op.drop_index(op.f('ix_event_user_id'), table_name='event')
    op.drop_index(op.f('ix_event_event_name'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_deposit_user_id'), table_name='deposit')
    op.drop_index(op.f('ix_deposit_tx_status'), table_name='deposit')
    op.drop_index(op.f('ix_deposit_currency'), table_name='deposit')
    op.drop_table('deposit')
    # ### end Alembic commands ###
